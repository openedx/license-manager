# This file is a "de-compacted" version of api-compact.yaml. The consuming tools are unable to process YAML anchors.
# This file was generated using http://www.yamllint.com/.

---
apigateway_responses:
  "200":
    statusCode: "200"
  "201":
    statusCode: "201"
  "401":
    statusCode: "401"
  "403":
    statusCode: "403"
  "404":
    statusCode: "404"
  "429":
    statusCode: "429"
  "500":
    statusCode: "500"
  default:
    statusCode: "400"
apigateway_get_responses:
  "200":
    statusCode: "200"
  "301":
    statusCode: "301"
  "401":
    statusCode: "401"
  "403":
    statusCode: "403"
  "404":
    statusCode: "404"
  "429":
    statusCode: "429"
  "500":
    statusCode: "500"
  default:
    statusCode: "400"
bulk_revoke_apigateway_responses:
  "204":
    statusCode: "204"
  "401":
    statusCode: "401"
  "403":
    statusCode: "403"
  "404":
    statusCode: "404"
  "429":
    statusCode: "429"
  "500":
    statusCode: "500"
  default:
    statusCode: "400"
apigateway_responses_with_mapping_template_for_uuid:
  "200":
    statusCode: "200"
    responseTemplates:
      application/json: >
        #set($inputRoot = $input.path('$')) #set($host =
        $stageVariables.gateway_host) #set($uuid = $input.params('uuid'))

        #set($URLMatchRegex = "(^https?://)[^/]*[^?]*(.*$)") #set($updatedURL = "$1$host$context.resourcePath$2") #set($resourceUuidMatch = "{uuid}")

        {
          "count": $inputRoot.count,
          "next": "$inputRoot.next.replaceAll($URLMatchRegex, $updatedURL).replace($resourceUuidMatch, $uuid)",
          "previous": "$inputRoot.previous.replaceAll($URLMatchRegex, $updatedURL).replace($resourceUuidMatch, $uuid)",
          "results": $inputRoot.results
        }
  "401":
    statusCode: "401"
  "403":
    statusCode: "403"
  "404":
    statusCode: "404"
  "429":
    statusCode: "429"
  "500":
    statusCode: "500"
  default:
    statusCode: "400"
responses:
  "200":
    description: OK
  "201":
    description: Created
  "400":
    description: Bad Request
  "401":
    description: Unauthorized
  "403":
    description: Forbidden
  "404":
    description: Not Found
  "429":
    description: Too Many Requests
  "500":
    description: Internal Server Error
get_responses:
  "200":
    description: OK
  "301":
    description: Moved Permanently
  "400":
    description: Bad Request
  "401":
    description: Unauthorized
  "403":
    description: Forbidden
  "404":
    description: Not Found
  "429":
    description: Too Many Requests
  "500":
    description: Internal Server Error
bulk_revoke_responses:
  "204":
    description: No Content - All revocations were successful
  "400":
    description: Bad Request
  "401":
    description: Unauthorized
  "403":
    description: Forbidden
  "404":
    description: Not Found
  "429":
    description: Too Many Requests
  "500":
    description: Internal Server Error
produces:
  - application/json
  - application/csv
enterprise_customer_uuid_qs_param:
  in: query
  name: enterprise_customer_uuid
  required: true
  type: string
enterprise_customer_uuid_qs_param_optional:
  in: query
  name: enterprise_customer_uuid
  required: false
  type: string
enroll_all_qs_param:
  in: query
  name: enroll_all
  required: false
  type: string
subscription_uuid_qs_param:
  in: query
  name: subscription_uuid
  required: false
  type: string
uuid:
  name: uuid
  in: path
  required: true
  type: string
auth_header:
  name: Authorization
  in: header
  required: true
  type: string
endpoints:
  v1:
    assignLicenses:
      post:
        description: Assigns a license to given user emails and sends an activation email.
        operationId: assign_licenses
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: Authorization
            in: header
            required: true
            type: string
          - name: uuid
            in: path
            required: true
            type: string
          - name: data
            in: body
            description: User emails, sfids, and email content.
            required: true
            schema:
              type: array
              items:
                type: object
                properties:
                  user_emails:
                    description: List of emails to assign licenses.
                    type: array
                    required: true
                    items:
                      type: string
                      description: user email
                  user_sfids:
                    description: List of salesforce user ids to assign licenses.
                    type: array
                    items:
                      type: string
                      description: user's salesforce opportunity id
                  greeting:
                    description: Email template closing e.g Hello.
                    type: string
                  closing:
                    description: Email template closing e.g Goodbye.
                    type: string
                  notify_users:
                    description: Send license assignment email or not.
                    type: boolean
        responses:
          "200":
            description: OK
          "201":
            description: Created
          "400":
            description: Bad Request
          "401":
            description: Unauthorized
          "403":
            description: Forbidden
          "404":
            description: Not Found
          "429":
            description: Too Many Requests
          "500":
            description: Internal Server Error
        x-amazon-apigateway-integration:
          responses:
            "200":
              statusCode: "200"
            "201":
              statusCode: "201"
            "401":
              statusCode: "401"
            "403":
              statusCode: "403"
            "404":
              statusCode: "404"
            "429":
              statusCode: "429"
            "500":
              statusCode: "500"
            default:
              statusCode: "400"
          httpMethod: POST
          type: http
          requestParameters:
            integration.request.header.Authorization: method.request.header.Authorization
            integration.request.path.uuid: method.request.path.uuid
          uri: https://${stageVariables.license_manager_host}/api/v1/subscriptions/{uuid}/licenses/assign/
    revokeLicenses:
      post:
        description: Revokes one or more licenses in a subscription plan
        operationId: revoke_licenses
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: Authorization
            in: header
            required: true
            type: string
          - name: uuid
            in: path
            required: true
            type: string
          - name: RequestPayload
            in: body
            description: User emails OR search filters for emails and status
            required: true
            schema:
              type: array
              items:
                $ref: "#/definitions/RequestPayload"
        responses:
          "204":
            description: No Content - All revocations were successful
          "400":
            description: Bad Request
          "401":
            description: Unauthorized
          "403":
            description: Forbidden
          "404":
            description: Not Found
          "429":
            description: Too Many Requests
          "500":
            description: Internal Server Error
        x-amazon-apigateway-integration:
          responses:
            "204":
              statusCode: "204"
            "401":
              statusCode: "401"
            "403":
              statusCode: "403"
            "404":
              statusCode: "404"
            "429":
              statusCode: "429"
            "500":
              statusCode: "500"
            default:
              statusCode: "400"
          httpMethod: POST
          type: http
          requestParameters:
            integration.request.header.Authorization: method.request.header.Authorization
            integration.request.path.uuid: method.request.path.uuid
          uri: https://${stageVariables.license_manager_host}/api/v1/subscriptions/{uuid}/licenses/bulk-revoke/
    bulkLicenseEnrollment:
      post:
        description: Enrolls a list of learners in a given list of courses after
          verifying license subsidies.
        operationId: bulk_license_enrollment
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: Authorization
            in: header
            required: true
            type: string
          - in: query
            name: enterprise_customer_uuid
            required: true
            type: string
          - in: query
            name: enroll_all
            required: false
            type: string
          - in: query
            name: subscription_uuid
            required: false
            type: string
          - name: payload
            in: body
            description: User emails and course run keys along with a notify learners flag
            required: true
            schema:
              type: array
              items:
                type: object
                properties:
                  emails:
                    description: list of learner emails
                    type: array
                    required: true
                    items:
                      type: string
                      description: user email
                  course_run_keys:
                    description: list of courses to enroll learners into
                    type: array
                    required: true
                    items:
                      type: string
                      description: course run key
                  notify:
                    description: Whether to notify learner of their enrollment
                    type: boolean
                    required: true
        responses:
          "200":
            description: OK
          "201":
            description: Created
          "400":
            description: Bad Request
          "401":
            description: Unauthorized
          "403":
            description: Forbidden
          "404":
            description: Not Found
          "429":
            description: Too Many Requests
          "500":
            description: Internal Server Error
        x-amazon-apigateway-integration:
          responses:
            "200":
              statusCode: "200"
            "201":
              statusCode: "201"
            "401":
              statusCode: "401"
            "403":
              statusCode: "403"
            "404":
              statusCode: "404"
            "429":
              statusCode: "429"
            "500":
              statusCode: "500"
            default:
              statusCode: "400"
          httpMethod: POST
          type: http
          requestParameters:
            integration.request.header.Authorization: method.request.header.Authorization
            integration.request.querystring.enterprise_customer_uuid: method.request.querystring.enterprise_customer_uuid
            integration.request.querystring.enroll_all: method.request.querystring.enroll_all
            integration.request.querystring.subscription_uuid: method.request.querystring.subscription_uuid
          uri: https://${stageVariables.license_manager_host}/api/v1/bulk-license-enrollment
    subscriptionsList:
      get:
        operationId: subscriptions_summary_endpoint
        description: Returns a list of subscription plans for a customer
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: Authorization
            in: header
            required: true
            type: string
          - in: query
            name: enterprise_customer_uuid
            required: false
            type: string
          - name: page
            in: query
            required: false
            type: integer
          - name: current
            in: query
            required: false
            type: string
        responses:
          "200":
            description: OK
          "301":
            description: Moved Permanently
          "400":
            description: Bad Request
          "401":
            description: Unauthorized
          "403":
            description: Forbidden
          "404":
            description: Not Found
          "429":
            description: Too Many Requests
          "500":
            description: Internal Server Error
        x-amazon-apigateway-integration:
          responses:
            "200":
              statusCode: "200"
            "301":
              statusCode: "301"
            "401":
              statusCode: "401"
            "403":
              statusCode: "403"
            "404":
              statusCode: "404"
            "429":
              statusCode: "429"
            "500":
              statusCode: "500"
            default:
              statusCode: "400"
          httpMethod: GET
          type: http
          requestParameters:
            integration.request.header.Authorization: method.request.header.Authorization
            integration.request.querystring.enterprise_customer_uuid: method.request.querystring.enterprise_customer_uuid
            integration.request.querystring.page: method.request.querystring.page
            integration.request.querystring.current: method.request.querystring.current
          uri: https://${stageVariables.license_manager_host}/api/v1/subscriptions/
definitions:
  BulkRevokeFilters:
    type: object
    properties:
      user_email:
        type: string
        description: User email filter
      status_in:
        type: array
        description: Array of valid license statuses
        items:
          type: string
          description: status of the license
    description: Values provided to perform filtering against.
  RequestPayload:
    type: object
    properties:
      user_emails:
        type: array
        description: List of emails with which licenses are associated
        items:
          type: string
          description: user email
      filters:
        type: array
        description: Filters for lookup and filtering of licenses to revoke.
        items:
          $ref: "#/definitions/BulkRevokeFilters"
